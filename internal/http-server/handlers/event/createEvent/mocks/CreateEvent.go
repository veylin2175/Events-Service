// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// CreateEvent is an autogenerated mock type for the CreateEvent type
type CreateEvent struct {
	mock.Mock
}

// SaveEvent provides a mock function with given fields: userID, dateStr, text
func (_m *CreateEvent) SaveEvent(userID int64, dateStr string, text string) (int64, error) {
	ret := _m.Called(userID, dateStr, text)

	if len(ret) == 0 {
		panic("no return value specified for SaveEvent")
	}

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(int64, string, string) (int64, error)); ok {
		return rf(userID, dateStr, text)
	}
	if rf, ok := ret.Get(0).(func(int64, string, string) int64); ok {
		r0 = rf(userID, dateStr, text)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(int64, string, string) error); ok {
		r1 = rf(userID, dateStr, text)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCreateEvent creates a new instance of CreateEvent. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateEvent(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateEvent {
	mock := &CreateEvent{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
